<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Request Handling with Navigation</title>
    <style>
        body {
            display: flex;
            flex-direction: column; /* Arrange content vertically */
            align-items: center; /* Center horizontally */
            justify-content: flex-start; /* Start content from the top */
            min-height: 100vh; /* Ensure body takes full viewport height */
            margin: 0;
            background-color: #000; /* Black background */
            font-family: Arial, sans-serif;
            color: #E0E0E0; /* Light gray text for general readability */
        }

        /* --- Navigation Bar Styling --- */
        .navbar {
            width: 100%;
            background-color: #1a1a1a; /* Darker grey for navbar */
            padding: 15px 0;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
            display: flex;
            justify-content: center; /* Center navigation items */
            position: sticky; /* Makes navbar stick to the top */
            top: 0;
            z-index: 1000; /* Ensure it's above other content */
        }

        .navbar ul {
            list-style: none;
            padding: 0;
            margin: 0;
            display: flex;
            gap: 30px; /* Space between navigation items */
        }

        .navbar a {
            color: #ADD8E6; /* Light blue for navigation links */
            text-decoration: none;
            font-size: 17px;
            font-weight: bold;
            transition: color 0.3s ease;
        }

        .navbar a:hover,
        .navbar a.active { /* 'active' class for the current page */
            color: #FFFFFF; /* White on hover or if active */
        }

        /* --- Main Content Area (where buttons reside) --- */
        .main-content {
            flex-grow: 1; /* Allows main content to take up remaining space */
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center; /* Center buttons vertically within this area */
            width: 100%; /* Take full width */
            padding: 20px; /* Add some padding */
            box-sizing: border-box;
        }

        /* --- Button Styling (from your original code, adjusted for visual) --- */
        button {
            /* Adjusted width to be more like the elongated rectangle in the image */
            width: 70%; /* Can be adjusted */
            max-width: 400px; /* Max width to prevent them from becoming too wide on large screens */
            padding: 18px 25px; /* Increased padding for more elongated look */
            margin: 15px 0; /* More margin between buttons */
            border: none;
            border-radius: 3px; /* Slightly less rounded than 5px for the image */
            font-size: 18px; /* Slightly larger font for better visibility */
            font-weight: bold; /* Bold text as in the image */
            letter-spacing: 1px; /* Add some letter spacing */
            cursor: pointer;
            color: white;
            text-transform: uppercase; /* Ensure text is uppercase as in the image */
            transition: background-color 0.3s ease, transform 0.1s ease; /* Smooth hover effects */
        }

        #acceptBtn {
            background-color: #1C2526; /* Dark gray-black, matches image */
        }

        #acceptBtn:hover {
            background-color: #2F3C3D; /* Slightly lighter on hover */
            transform: translateY(-2px); /* Slight lift on hover */
        }

        #declineBtn {
            background-color: #FF0000; /* Red, matches image */
        }

        #declineBtn:hover {
            background-color: #CC0000; /* Darker red on hover */
            transform: translateY(-2px); /* Slight lift on hover */
        }

        /* --- Responsive adjustments --- */
        @media (max-width: 600px) {
            .navbar ul {
                gap: 15px; /* Reduce gap on smaller screens */
            }
            .navbar a {
                font-size: 15px;
            }
            button {
                width: 90%; /* Buttons take more width on small screens */
                padding: 15px 20px; /* Adjust padding */
                font-size: 16px;
            }
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <ul>
            <li><a href="#" class="active">Home</a></li>
            <li><a href="requests.html">Requests</a></li>
            <li><a href="settings.html">Settings</a></li>
            <li><a href="profile.html">Profile</a></li>
        </ul>
    </nav>

    <div class="main-content">
        <button id="acceptBtn">ACCEPT REQUEST</button>
        <button id="declineBtn">DECLINE</button>
    </div>

    <script>
        // Get the buttons by their IDs
        const acceptBtn = document.getElementById('acceptBtn');
        const declineBtn = document.getElementById('declineBtn');

        // Add a click event listener to the ACCEPT button
        acceptBtn.addEventListener('click', function() {
            // Navigate to an acceptance confirmation screen
            alert('Request Accepted!'); // For demonstration
            window.location.href = 'acceptanceConfirmation.html'; // Create this HTML file
        });

        // Add a click event listener to the DECLINE button
        declineBtn.addEventListener('click', function() {
            // Navigate to a decline reason screen or just a next screen
            alert('Request Declined!'); // For demonstration
            window.location.href = 'declineReason.html'; // Create this HTML file
        });

        // Optional: Highlight current page in navbar (basic example)
        // You'd typically do this server-side or with more sophisticated JS
        const navLinks = document.querySelectorAll('.navbar a');
        const currentPage = window.location.pathname.split('/').pop(); // Gets 'index.html', 'requests.html', etc.

        navLinks.forEach(link => {
            if (link.getAttribute('href') === currentPage || (currentPage === '' && link.getAttribute('href') === '#')) {
                link.classList.add('active');
            } else {
                link.classList.remove('active');
            }
        });
    </script>
</body>
</html>


